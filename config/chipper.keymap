/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define COMBO_TIMEOUT 60
#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define DANGER  3

/ {
};

/ {
    combos {
        compatible = "zmk,combos";

        Pasta {
            bindings = <&kp LC(V)>;
            key-positions = <29 28>;
        };

        Copy {
            bindings = <&kp LC(C)>;
            key-positions = <28 27>;
        };

        Cut {
            bindings = <&kp LC(X)>;
            key-positions = <27 26>;
        };

        Rugrat {
            bindings = <&kp LC(Z)>;
            key-positions = <26 25>;
        };

        Backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <30 31>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <32 33>;
        };
    };
};

&caps_word { continue-list = <UNDERSCORE MINUS BACKSPACE DELETE HOME END LEFT RIGHT>; };

&kscan0 { debounce-period = <20>; };

/ {
    behaviors {
        bh: layer_taps {
            compatible = "zmk,behavior-hold-tap";
            label = "Layer-Tap";
            #binding-cells = <2>;
            tapping_term_ms = <215>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <170>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        sm: shift_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <170>;
            quick_tap_ms = <0>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | 
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | 
            //             | GUI | LWR | ENT |   | SPC | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q  &kp W        &kp F           &kp P             &kp B        &kp J       &kp L              &kp U            &kp Y        &kp SEMI        &kp PIPE
&kp TAB     &kp A  &hm LCTRL R  &hm LEFT_ALT S  &hm LEFT_SHIFT T  &kp G        &kp M       &hm RIGHT_SHIFT N  &hm RIGHT_ALT E  &hm RCTRL I  &hm LEFT_GUI O  &kp APOSTROPHE
&none       &kp Z  &kp X        &kp C           &kp D             &kp V        &kp K       &kp H              &kp COMMA        &kp DOT      &kp FSLH        &kp NON_US_BACKSLASH
                                &kp GLOBE       &mo 1             &kp SPACE    &kp RETURN  &mo 2              &mo 3
            >;

            label = "BASE";
        };

        Lower {
            bindings = <
&kp KP_NUMLOCK  &kp AMPERSAND    &kp LESS_THAN   &kp UP_ARROW    &kp GREATER_THAN  &kp LEFT_BRACE          &kp RIGHT_BRACE        &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0  &kp KP_EQUAL
&kp TILDE       &kp PERCENT      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW   &kp LEFT_BRACKET        &kp RIGHT_BRACKET      &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_MINUS     &kp KP_PLUS
&kp CARET       &kp EXCLAMATION  &kp AT_SIGN     &kp HASH        &kp DOLLAR        &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp KP_NUMBER_1  &kp KP_N2        &kp KP_NUMBER_3  &kp KP_SLASH     &kp KP_MULTIPLY
                                                 &none           &none             &none                   &kp LEFT_SHIFT         &kp LEFT_META    &none
            >;

            label = "Numbers";
        };

        Upper {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        System {
            bindings = <
&kp C_PWR   &none         &none         &none         &none         &bootloader     &bootloader  &none  &none  &none  &none  &none
&none       &none         &none         &none         &none         &sys_reset      &sys_reset   &none  &none  &none  &none  &none
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none        &none  &none  &none  &none  &none
                                        &none         &none         &none           &none        &none  &none
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
